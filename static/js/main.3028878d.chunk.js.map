{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/services/imagesApi.js","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/ImagesInfo/ImagesInfo.jsx","App.js","index.js"],"names":["Searchbar","state","value","handleNameChange","e","target","setState","handleSubmit","preventDefault","trim","props","onSubmit","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleClearSearchbar","this","className","type","onChange","onClick","autoComplete","autoFocus","placeholder","Component","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","currentTarget","window","addEventListener","removeEventListener","src","alt","createPortal","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","scroll","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","ImagesInfo","error","status","fetchImagesOnClick","nextName","nextPage","imagesAPI","newImages","total","hits","scrollTo","scrollHeight","catch","onClickLoadMore","prevState","prevProps","prevName","imageName","prevPage","color","height","width","timeout","role","message","App","search","handleFormSubmit","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3028878d.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleNameChange = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.value.trim() === \"\") {\r\n      toast.dark(\"Please enter something\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.value);\r\n  };\r\n\r\n  handleClearSearchbar = () => {\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <header className='Searchbar'>\r\n        <form className='SearchForm' onSubmit={this.handleSubmit}>\r\n          <button type='submit' className='SearchForm-button'></button>\r\n          <input\r\n            value={value}\r\n            onChange={this.handleNameChange}\r\n            onClick={this.handleClearSearchbar}\r\n            className='SearchForm-input'\r\n            type='text'\r\n            autoComplete='off'\r\n            autoFocus\r\n            placeholder='Search images and photos'\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}","function fetchImages(name, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=21770810-71d636d270901957bd723d7c5&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(\"Not found. Try to change name\"));\r\n  });\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className='Overlay' onClick={this.handleBackdropClick}>\r\n        <div className='Modal'>\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { src, alt, largeImageUrl } = this.props;\r\n    const { showModal } = this.state;\r\n    return (\r\n      <li className='ImageGalleryItem'>\r\n        <img\r\n          onClick={this.toggleModal}\r\n          src={src}\r\n          alt={alt}\r\n          className='ImageGalleryItem-image'\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nfunction ImageGallery({ images, onClick }) {\r\n  return (\r\n    <ul className='ImageGallery' onClick={onClick}>\r\n      {images.map((image, index) => (\r\n        <ImageGalleryItem\r\n          key={index}\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Button extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n  };\r\n\r\n  scroll = () => {\r\n    this.props.onClick();\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight - 130,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.scroll} className='Button' type='button'>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport imagesAPI from \"../services/imagesApi\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport Button from \"../Button/Button\";\r\n\r\nexport default class ImagesInfo extends Component {\r\n  state = {\r\n    images: [],\r\n    error: null,\r\n    status: \"idle\",\r\n    page: 1,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({ images: [] });\r\n      this.fetchImagesOnClick(nextName, nextPage);\r\n    }\r\n\r\n    if (prevPage !== nextPage && nextPage !== 1) {\r\n      this.setState({ status: \"pending\" });\r\n      this.fetchImagesOnClick(nextName, nextPage);\r\n    }\r\n  }\r\n\r\n  fetchImagesOnClick = (nextName, nextPage) => {\r\n    this.setState({ status: \"pending\" });\r\n\r\n    imagesAPI\r\n      .fetchImages(nextName, nextPage)\r\n      .then((newImages) => {\r\n        if (newImages.total !== 0) {\r\n          this.setState(({ images }) => ({\r\n            images: [...images, ...newImages.hits],\r\n            status: \"resolved\",\r\n          }));\r\n          nextPage > 1 &&\r\n            window.scrollTo({\r\n              top: document.documentElement.scrollHeight,\r\n              behavior: \"smooth\",\r\n            });\r\n          return;\r\n        }\r\n        return Promise.reject(new Error(\"Invalid request\"));\r\n      })\r\n      .catch((error) => this.setState({ error, status: \"rejected\" }));\r\n  };\r\n\r\n  onClickLoadMore = () => {\r\n    this.setState((prevState) => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { error, status } = this.state;\r\n\r\n    if (status === \"idle\") {\r\n      return <p>Enter something to see the pictures</p>;\r\n    }\r\n\r\n    if (status === \"pending\") {\r\n      return (\r\n        <Loader\r\n          type='Grid'\r\n          color='darkgrey'\r\n          height={50}\r\n          width={50}\r\n          timeout={5000}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (status === \"rejected\") {\r\n      return (\r\n        <div role='alert'>\r\n          <p>Sorry, something went wrong. Error: {error.message}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (status === \"resolved\") {\r\n      return (\r\n        <>\r\n          <ImageGallery images={this.state.images} />\r\n          <Button onClick={this.onClickLoadMore} page={this.state.page} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}","import { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImagesInfo from \"./components/ImagesInfo/ImagesInfo\";\n\nexport default class App extends Component {\n  state = {\n    search: \"\",\n  };\n\n  handleFormSubmit = (e) => {\n    return this.setState({ search: e });\n  };\n\n  render() {\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImagesInfo imageName={this.state.search} />\n\n        <ToastContainer\n          position='top-center'\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}